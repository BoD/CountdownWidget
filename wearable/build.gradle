apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    publishNonDefault true

    defaultConfig {
        applicationId 'org.jraf.android.countdownwidget3'
        minSdkVersion 21
        targetSdkVersion versions.targetSdk
        versionCode buildNumber
        versionName buildProperties.versionName

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        buildConfigField 'String', 'GIT_SHA1', "\"${gitSha1}\""
        buildConfigField 'String', 'BUILD_DATE', "\"${buildDate}\""
        // For now we enable strict mode for all the configs
        buildConfigField 'boolean', 'STRICT_MODE', 'true'

        resConfigs 'en', 'fr'

        // Useful for api keys in the manifest (Maps, Crashlytics, ...)
        manifestPlaceholders = buildProperties
    }

    flavorDimensions 'blur', 'movie'

    productFlavors {
        rogueone {
            dimension 'movie'
        }

        episode8 {
            dimension 'movie'
        }

        trump {
            dimension 'movie'
        }

        hansolo {
            dimension 'movie'
        }


        blurred {
            dimension 'blur'
        }

        clear {
            dimension 'blur'
        }
    }
    signingConfigs {
        release {
            storeFile file(buildProperties.signingStoreFile)
            storePassword buildProperties.signingStorePassword
            keyAlias buildProperties.signingKeyAlias
            keyPassword buildProperties.signingKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }
}

android.applicationVariants.all { variant ->
    // Define application id based on flavors
    switch (variant.flavorName) {
    // Rogue One
        case "blurredRogueone":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.ro.blurred')
            break

        case "clearRogueone":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.ro.clear')
            break

    // Episode VIII
        case "blurredEpisode8":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.e8.blurred')
            break

        case "clearEpisode8":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.e8.clear')
            break

    // Trump
        case "clearTrump":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.trump.clear')
            break

    // Han Solo
        case "blurredHansolo":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.hs.blurred')
            break

        case "clearHansolo":
            variant.mergedFlavor.setApplicationId('org.jraf.android.countdownwidget3.hs.clear')
            break
    }
}

configurations {
    blurredRogueoneCompile
    clearRogueoneCompile
    blurredEpisode8Compile
    clearEpisode8Compile
    clearTrumpCompile
    blurredHansoloCompile
    clearHansoloCompile
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    blurredRogueoneCompile project(path: ':common', configuration: 'blurredRogueoneRelease')
    clearRogueoneCompile project(path: ':common', configuration: 'clearRogueoneRelease')

    blurredEpisode8Compile project(path: ':common', configuration: 'blurredEpisode8Release')
    clearEpisode8Compile project(path: ':common', configuration: 'clearEpisode8Release')

    clearTrumpCompile project(path: ':common', configuration: 'clearTrumpRelease')

    blurredHansoloCompile project(path: ':common', configuration: 'blurredHansoloRelease')
    clearHansoloCompile project(path: ':common', configuration: 'clearHansoloRelease')

    compile 'com.github.BoD:jraf-android-util:-SNAPSHOT'
}

android.variantFilter { variant ->
    def flavorNames =  variant.getFlavors().collect({it.name})
    if (flavorNames.contains("blurred") && flavorNames.contains("trump")) {
        variant.setIgnore(true)
    }
}
