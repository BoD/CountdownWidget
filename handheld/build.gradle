buildscript {
    repositories {
        maven {
            url 'https://maven.fabric.io/repo'
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven {
        url 'https://maven.fabric.io/repo'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "org.jraf.android.countdownwidget"
        minSdkVersion 9
        targetSdkVersion 21
        versionCode buildNumber
        versionName buildProperties['versionName']
        buildConfigField 'String', 'GIT_SHA1', '"' + gitSha1() + '"'
        buildConfigField 'String', 'BUILD_DATE', '"' + buildDate() + '"'
        // For now we enable strict mode for all the configs
        buildConfigField 'boolean', 'STRICT_MODE', 'true'
    }

    signingConfigs {
        release {
            storeFile file(buildProperties['key-store'])
            storePassword buildProperties['key-store-password']
            keyAlias buildProperties['key-alias']
            keyPassword buildProperties['key-alias-password']
        }
    }

    buildTypes {
        debug {
            buildConfigField 'boolean', 'CRASH_REPORT', 'false'
        }

        release {
            buildConfigField 'boolean', 'CRASH_REPORT', 'true'

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        // Perform resource filtering
        variant.mergeResources.doLast {
            filterResources(variant)
        }
    }

    dependencies {
        compile project(':common')
        compile 'org.jraf:jraf-android-util:1.0.0'
        compile 'org.jraf:android-switch-backport:1.3.1'
        compile('com.crashlytics.sdk.android:crashlytics:2.0.1@aar') {
            transitive = true;
        }
        // Package the wear apk inside this one
        wearApp project(':wearable')
    }

    task deploy(dependsOn: assembleRelease) << {
        description 'Build a release apk, copy the result to the deploy and \'etc\' folders, then increment the build number.'

        // Copy the apk to the 'etc' folder
        new File('../etc/apk').mkdirs()
        copy {
            from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
            into '../etc/apk'
            rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
        }

        // Also copy the apk to the deploy folder
        copy {
            from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
            into buildProperties['deploy-folder']
            rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
        }

        // Copy the proguard mapping to the 'etc' folder
        new File('../etc/proguard').mkdirs()
        copy {
            from buildDir.getPath() + '/outputs/proguard/release/mapping.txt'
            into '../etc/proguard'
            rename 'mapping.txt', "mapping-${android.defaultConfig.versionCode}.txt"
        }

        // Increment build number
        buildNumberProperties['build.number'] = (buildNumber + 1).toString()
        buildNumberProperties.store(buildNumberFile.newWriter(), null)
    }

}
